`
  Program which takes a counting number (0, 1, 2, ...) and returns that number
  in English cardinal word form.
`

`Store program arguments`
("x<-" "number" ("@"))

`Error if the number is negative`
("?" ("<" ("x->" "number") #0#) ("<>" #3#) ?)

`Cache sub-scripts to avoid repeated file reads`
("()<-" "NET1" ("[o]->" "app/net1.txt"))
("()<-" "NET2" ("[o]->" "app/net2.txt"))
("()<-" "NET3" ("[o]->" "app/net3.txt"))
("()<-" "NET4" ("[o]->" "app/net4.txt"))
("()<-" "NET5" ("[o]->" "app/net5.txt"))
("()<-" "NET6" ("[o]->" "app/net6.txt"))

`Run each sub-script as a net to match numbers within their ranges`
`[0-9]`
("x<-" "text" ("NET1" ("x->" "number")))
`[10-19]`
("?" ("=" ("x->" "text") "") ("x<-" "text" ("NET2" ("x->" "number"))) ?)
`[20-99]`
("?" ("=" ("x->" "text") "") ("x<-" "text" ("NET3" ("x->" "number"))) ?)
`[100-999]`
("?" ("=" ("x->" "text") "") ("x<-" "text" ("NET4" ("x->" "number"))) ?)
`[1000-999999]`
("?" ("=" ("x->" "text") "") ("x<-" "text" ("NET5" ("x->" "number"))) ?)
`[1000000-999999999]`
("?" ("=" ("x->" "text") "") ("x<-" "text" ("NET6" ("x->" "number"))) ?)

`Return any matched text`
("x->" "text")
