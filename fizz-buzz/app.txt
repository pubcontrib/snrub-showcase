`
  Program which takes a counting number (0, 1, 2, ...) and returns that many
  turns in the game of FizzBuzz.
`

`Store program arguments`
("x<-" "goal" ("x->" "@"))

`Error if the goal is negative`
("?" ("<" ("x->" "goal") #0#) ("<>" #3#) ?)

`Run all turns of the game storing each response in-order`
("x<-" "turn" #1#)
("x<-" "responses" [])

("o"
  ("<" ("x->" "turn") ("+" ("x->" "goal") #1#))
  ("..."
    `Store divisibility tests`
    ("x<-" "/3" ("!" ("%" ("x->" "turn") #3#)))
    ("x<-" "/5" ("!" ("%" ("x->" "turn") #5#)))

    `Ask the response for the current turn`
    ("x<-"
      "response"
      ("?"
        ("&" ("x->" "/3") ("x->" "/5"))
        "Fizz Buzz"
        ("?"
          ("x->" "/3")
          "Fizz"
          ("?"
            ("x->" "/5")
            "Buzz"
            ("\"" ("x->" "turn"))
          )
        )
      )
    )

    `Add the response to the list and continue to the next turn`
    ("x<-" "responses" ("+" ("x->" "responses") [("x->" "response")]))
    ("x<-" "turn" ("+" ("x->" "turn") #1#))
  )
)

`Return the responses of the player`
("x->" "responses")
