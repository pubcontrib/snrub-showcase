`
  Program which takes a bill (total amount in any currency), tip (percent), and
  scale (number of digits for the decimal half of numbers) then returns the
  amount needed for the tip.
`

`Store program arguments`
("x<-" "arguments" ("@"))
("x<-" "bill" ("$->" ("x->" "arguments") "bill"))
("x<-" "tip" ("$->" ("x->" "arguments") "tip"))
("x<-" "scale" ("$->" ("x->" "arguments") "scale"))

`Set default values if they are missing`
("?" ("=" ("x->" "tip") ?) ("x<-" "tip" #20#) ?)
("?" ("=" ("x->" "scale") ?) ("x<-" "scale" #2#) ?)

`Error if a bill is missing`
("?" ("=" ("x->" "bill") ?) ("<>" #3#) ?)

`Error if a bill, tip, or scale aren't numbers`
("?" ("!" ("=" ("_" ("x->" "bill")) "##")) ("<>" #3#) ?)
("?" ("!" ("=" ("_" ("x->" "tip")) "##")) ("<>" #3#) ?)
("?" ("!" ("=" ("_" ("x->" "scale")) "##")) ("<>" #3#) ?)

`Error if a bill, tip, or scale is negative`
("?" ("<" ("x->" "bill") #0#) ("<>" #3#) ?)
("?" ("<" ("x->" "tip") #0#) ("<>" #3#) ?)
("?" ("<" ("x->" "scale") #0#) ("<>" #3#) ?)

`Use the scale to figure out how the computed amount needs to be adjusted`
("x<-" "adjustment" #10#)
("x<-" "index" #1#)
("o"
  ("<" ("x->" "index") ("x->" "scale"))
  ("..."
    ("x<-" "adjustment" ("*" ("x->" "adjustment") #10#))
    ("x<-" "index" ("+" ("x->" "index") #1#))
  )
)

`Compute and return the adjusted amount`
("x<-" "amount" ("*" ("x->" "bill") ("x->" "tip")))
("x<-" "amount" ("/" ("x->" "amount") ("x->" "adjustment")))

`Convert fixed-point number to string representation`
("x<-" "digits" ("\"" ("x->" "amount")))
("o"
  ("<" ("| |" ("x->" "digits")) ("+" ("x->" "scale") #1#))
  ("x<-" "digits" ("+" "0" ("x->" "digits")))
)

("x<-" "string" "")
("x<-" "limit" ("+" ("| |" ("x->" "digits")) #1#))
("x<-" "index" #1#)
("o"
  ("<" ("x->" "index") ("x->" "limit"))
  ("..."
    ("?"
      ("=" ("x->" "index") ("-" ("x->" "limit") ("x->" "scale")))
      ("x<-" "string" ("+" ("x->" "string") "."))
      ?
    )
    ("x<-" "string" ("+" ("x->" "string") ("$->" ("x->" "digits") ("x->" "index"))))
    ("x<-" "index" ("+" ("x->" "index") #1#))
  )
)

("x->" "string")
